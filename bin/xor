#!/usr/bin/env bash
set -e

source $(dirname "$0")/../core/config.sh
source $(dirname "$0")/../core/messages.sh

source $(dirname "$0")/installer.sh
source $(dirname "$0")/remover.sh
source $(dirname "$0")/../database/listing.sh
source $(dirname "$0")/../core/commands.sh

INTERACTIVE_MODE=false
VERBOSE_MODE=false
DEBUG_MODE=false


show_help() {
    echo "Usage: $0 <command> [options] <package>"
    echo ""
    echo "Avaible commands:"
    echo "  install         Install package"
    echo "  remove          Remove package"
    echo "  reinstall       Remove and install package"
    echo "  list            List installed packages"
    echo "  list-repository List avaible packages to install"
    echo "  depends	  List package dependecies"
    # echo ""
    # echo "Options:"
    # echo "  -i, --interactive   Perguntar para cada dependência antes de instalar"
    # echo "  -v, --verbose       Mostrar mais detalhes durante a execução"
    # echo "  -h, --help          Mostrar esta ajuda"
    exit 0
}

ensure_package_specified() {
    if [ -z "$PKG_NAME" ]; then
	msgerr "Error: No package specified."
	exit 1
    fi
}

reinstall_package() {
    remove_package "$1" &&
    check_already_installed "$1"
}

COMMAND=""
PKG_NAME=""


need_root() {

    # Root detection TODO: NEED TO CHANGE
    if [[ $(whoami) == "root" ]]; then
	return
    fi
    msgerr "This command needs root"
    interrupt
}


while [[ $# -gt 0 ]]; do
    case "$1" in
	install|remove|reinstall|depends|list|list-repository)
	    COMMAND="$1"
	    shift
	    if [[ $# -gt 0 ]]; then
		PKG_NAME=$(echo "$1" | tr '[:upper:]' '[:lower:]')
		shift
	    fi
	    ;;
	-i|--interactive)
	    INTERACTIVE_MODE=true
	    shift
	    ;;
	-v|--verbose)
	    VERBOSE_MODE=true
	    shift
	    ;;
	    -h|--help)
		show_help
		;;
	    *)
		msgerr "Error: Unknow command or option '$1'"
		show_help
		;;
	esac
done

case "$COMMAND" in
    install)
	need_root
        ensure_package_specified
	check_already_installed "$PKG_NAME"
	#main_install "$PKG_NAME"
        ;;
    remove)
	need_root
        ensure_package_specified
        remove_package "$PKG_NAME"
        ;;
    reinstall)
	need_root
	ensure_package_specified
	reinstall_package "$PKG_NAME"
	;;
    list)
        list_installed_packages "$PKG_NAME"
        ;;
    list-repository)
        list_repository "$PKG_NAME"
        ;;
    depends)
	show_dependencies "$PKG_NAME"
	;;
    *)
        # msgerr "Erro: Nenhum comando válido foi especificado."
        show_help
        ;;
esac
